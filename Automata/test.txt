

****************************************************


DFA
Q = [0,6)
S = { 0 }
F = { 2  3  4 }
Transitions = 
0->{ '0'->1  '1'->2 }
1->{ '0'->0  '1'->3 }
2->{ '0'->4  '1'->5 }
3->{ '0'->4  '1'->5 }
4->{ '0'->4  '1'->5 }
5->{ ['0','1']->5 }

current = -1

 is the DFA Usefulf ?: 0

The combination for all the out labels of State's£ºC = { '0'  '1' }
L:
0 1 2 3 4 5
0 0 0 0 0 0
Initialize partitions, E0:
StateEqRel
{ 0  1  5 }
{ 2  3  4 }

Initialize L repr = {F}:
{ 2 }
L:
0 1 2 3 4 5
0 0 2 0 0 0
=========================== Iterate: k = 1
L:
0 1 2 3 4 5
0 0 1 0 0 0
Partitions:
StateEqRel
{ 0  1  5 }
{ 2  3  4 }

pick [q] in L:([q],a)=([2],'1')
split [p] w.r.t. ([2],'1')
===split[0] w.r.t. ([2],'1')
new split of [0] is [5]
[p]={ 0  1 }
[r]={ 5 }
p and r are the new representatives. Now update L with the smallest of [0] and [5]
using [r] = [5],L[r]=C.size();
after update L: 
L:
0 1 2 3 4 5
0 0 1 0 0 2
===split[2] w.r.t. ([2],'1')
new split of [2] is [-1]
=========================== Iterate: k = 2
L:
0 1 2 3 4 5
0 0 0 0 0 2
Partitions:
StateEqRel
{ 0  1 }
{ 2  3  4 }
{ 5 }

pick [q] in L:([q],a)=([2],'0')
split [p] w.r.t. ([2],'0')
===split[0] w.r.t. ([2],'0')
new split of [0] is [-1]
===split[2] w.r.t. ([2],'0')
new split of [2] is [-1]
===split[5] w.r.t. ([2],'0')
new split of [5] is [-1]
=========================== Iterate: k = 3
L:
0 1 2 3 4 5
0 0 0 0 0 1
Partitions:
StateEqRel
{ 0  1 }
{ 2  3  4 }
{ 5 }

pick [q] in L:([q],a)=([5],'1')
split [p] w.r.t. ([5],'1')
===split[0] w.r.t. ([5],'1')
new split of [0] is [-1]
===split[2] w.r.t. ([5],'1')
new split of [2] is [-1]
===split[5] w.r.t. ([5],'1')
new split of [5] is [-1]
=========================== Iterate: k = 4
L:
0 1 2 3 4 5
0 0 0 0 0 0
Partitions:
StateEqRel
{ 0  1 }
{ 2  3  4 }
{ 5 }

pick [q] in L:([q],a)=([5],'0')
split [p] w.r.t. ([5],'0')
===split[0] w.r.t. ([5],'0')
new split of [0] is [-1]
===split[2] w.r.t. ([5],'0')
new split of [2] is [-1]
===split[5] w.r.t. ([5],'0')
new split of [5] is [-1]

************ min_Hopcroft()

DFA
Q = [0,3)
S = { 0 }
F = { 1 }
Transitions = 
0->{ '0'->0  '1'->1 }
1->{ '0'->1  '1'->2 }
2->{ ['0','1']->2 }

current = -1


************min_dragon()

DFA
Q = [0,3)
S = { 0 }
F = { 1 }
Transitions = 
0->{ '0'->0  '1'->1 }
1->{ '0'->1  '1'->2 }
2->{ ['0','1']->2 }

current = -1

